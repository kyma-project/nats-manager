// Code generated by mockery v2.50.0. DO NOT EDIT.

package mocks

import (
	prometheus "github.com/prometheus/client_golang/prometheus"
	mock "github.com/stretchr/testify/mock"
)

// Collector is an autogenerated mock type for the Collector type
type Collector struct {
	mock.Mock
}

type Collector_Expecter struct {
	mock *mock.Mock
}

func (_m *Collector) EXPECT() *Collector_Expecter {
	return &Collector_Expecter{mock: &_m.Mock}
}

// GetAvailabilityZonesUsedMetric provides a mock function with no fields
func (_m *Collector) GetAvailabilityZonesUsedMetric() (prometheus.Gauge, error) {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetAvailabilityZonesUsedMetric")
	}

	var r0 prometheus.Gauge
	var r1 error
	if rf, ok := ret.Get(0).(func() (prometheus.Gauge, error)); ok {
		return rf()
	}
	if rf, ok := ret.Get(0).(func() prometheus.Gauge); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(prometheus.Gauge)
		}
	}

	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Collector_GetAvailabilityZonesUsedMetric_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetAvailabilityZonesUsedMetric'
type Collector_GetAvailabilityZonesUsedMetric_Call struct {
	*mock.Call
}

// GetAvailabilityZonesUsedMetric is a helper method to define mock.On call
func (_e *Collector_Expecter) GetAvailabilityZonesUsedMetric() *Collector_GetAvailabilityZonesUsedMetric_Call {
	return &Collector_GetAvailabilityZonesUsedMetric_Call{Call: _e.mock.On("GetAvailabilityZonesUsedMetric")}
}

func (_c *Collector_GetAvailabilityZonesUsedMetric_Call) Run(run func()) *Collector_GetAvailabilityZonesUsedMetric_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *Collector_GetAvailabilityZonesUsedMetric_Call) Return(_a0 prometheus.Gauge, _a1 error) *Collector_GetAvailabilityZonesUsedMetric_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *Collector_GetAvailabilityZonesUsedMetric_Call) RunAndReturn(run func() (prometheus.Gauge, error)) *Collector_GetAvailabilityZonesUsedMetric_Call {
	_c.Call.Return(run)
	return _c
}

// GetClusterSizeMetric provides a mock function with no fields
func (_m *Collector) GetClusterSizeMetric() (prometheus.Gauge, error) {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetClusterSizeMetric")
	}

	var r0 prometheus.Gauge
	var r1 error
	if rf, ok := ret.Get(0).(func() (prometheus.Gauge, error)); ok {
		return rf()
	}
	if rf, ok := ret.Get(0).(func() prometheus.Gauge); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(prometheus.Gauge)
		}
	}

	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Collector_GetClusterSizeMetric_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetClusterSizeMetric'
type Collector_GetClusterSizeMetric_Call struct {
	*mock.Call
}

// GetClusterSizeMetric is a helper method to define mock.On call
func (_e *Collector_Expecter) GetClusterSizeMetric() *Collector_GetClusterSizeMetric_Call {
	return &Collector_GetClusterSizeMetric_Call{Call: _e.mock.On("GetClusterSizeMetric")}
}

func (_c *Collector_GetClusterSizeMetric_Call) Run(run func()) *Collector_GetClusterSizeMetric_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *Collector_GetClusterSizeMetric_Call) Return(_a0 prometheus.Gauge, _a1 error) *Collector_GetClusterSizeMetric_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *Collector_GetClusterSizeMetric_Call) RunAndReturn(run func() (prometheus.Gauge, error)) *Collector_GetClusterSizeMetric_Call {
	_c.Call.Return(run)
	return _c
}

// RecordAvailabilityZonesUsedMetric provides a mock function with given fields: _a0
func (_m *Collector) RecordAvailabilityZonesUsedMetric(_a0 int) {
	_m.Called(_a0)
}

// Collector_RecordAvailabilityZonesUsedMetric_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'RecordAvailabilityZonesUsedMetric'
type Collector_RecordAvailabilityZonesUsedMetric_Call struct {
	*mock.Call
}

// RecordAvailabilityZonesUsedMetric is a helper method to define mock.On call
//   - _a0 int
func (_e *Collector_Expecter) RecordAvailabilityZonesUsedMetric(_a0 interface{}) *Collector_RecordAvailabilityZonesUsedMetric_Call {
	return &Collector_RecordAvailabilityZonesUsedMetric_Call{Call: _e.mock.On("RecordAvailabilityZonesUsedMetric", _a0)}
}

func (_c *Collector_RecordAvailabilityZonesUsedMetric_Call) Run(run func(_a0 int)) *Collector_RecordAvailabilityZonesUsedMetric_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(int))
	})
	return _c
}

func (_c *Collector_RecordAvailabilityZonesUsedMetric_Call) Return() *Collector_RecordAvailabilityZonesUsedMetric_Call {
	_c.Call.Return()
	return _c
}

func (_c *Collector_RecordAvailabilityZonesUsedMetric_Call) RunAndReturn(run func(int)) *Collector_RecordAvailabilityZonesUsedMetric_Call {
	_c.Run(run)
	return _c
}

// RecordClusterSizeMetric provides a mock function with given fields: _a0
func (_m *Collector) RecordClusterSizeMetric(_a0 int) {
	_m.Called(_a0)
}

// Collector_RecordClusterSizeMetric_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'RecordClusterSizeMetric'
type Collector_RecordClusterSizeMetric_Call struct {
	*mock.Call
}

// RecordClusterSizeMetric is a helper method to define mock.On call
//   - _a0 int
func (_e *Collector_Expecter) RecordClusterSizeMetric(_a0 interface{}) *Collector_RecordClusterSizeMetric_Call {
	return &Collector_RecordClusterSizeMetric_Call{Call: _e.mock.On("RecordClusterSizeMetric", _a0)}
}

func (_c *Collector_RecordClusterSizeMetric_Call) Run(run func(_a0 int)) *Collector_RecordClusterSizeMetric_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(int))
	})
	return _c
}

func (_c *Collector_RecordClusterSizeMetric_Call) Return() *Collector_RecordClusterSizeMetric_Call {
	_c.Call.Return()
	return _c
}

func (_c *Collector_RecordClusterSizeMetric_Call) RunAndReturn(run func(int)) *Collector_RecordClusterSizeMetric_Call {
	_c.Run(run)
	return _c
}

// RegisterMetrics provides a mock function with no fields
func (_m *Collector) RegisterMetrics() {
	_m.Called()
}

// Collector_RegisterMetrics_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'RegisterMetrics'
type Collector_RegisterMetrics_Call struct {
	*mock.Call
}

// RegisterMetrics is a helper method to define mock.On call
func (_e *Collector_Expecter) RegisterMetrics() *Collector_RegisterMetrics_Call {
	return &Collector_RegisterMetrics_Call{Call: _e.mock.On("RegisterMetrics")}
}

func (_c *Collector_RegisterMetrics_Call) Run(run func()) *Collector_RegisterMetrics_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *Collector_RegisterMetrics_Call) Return() *Collector_RegisterMetrics_Call {
	_c.Call.Return()
	return _c
}

func (_c *Collector_RegisterMetrics_Call) RunAndReturn(run func()) *Collector_RegisterMetrics_Call {
	_c.Run(run)
	return _c
}

// ResetAvailabilityZonesUsedMetric provides a mock function with no fields
func (_m *Collector) ResetAvailabilityZonesUsedMetric() {
	_m.Called()
}

// Collector_ResetAvailabilityZonesUsedMetric_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ResetAvailabilityZonesUsedMetric'
type Collector_ResetAvailabilityZonesUsedMetric_Call struct {
	*mock.Call
}

// ResetAvailabilityZonesUsedMetric is a helper method to define mock.On call
func (_e *Collector_Expecter) ResetAvailabilityZonesUsedMetric() *Collector_ResetAvailabilityZonesUsedMetric_Call {
	return &Collector_ResetAvailabilityZonesUsedMetric_Call{Call: _e.mock.On("ResetAvailabilityZonesUsedMetric")}
}

func (_c *Collector_ResetAvailabilityZonesUsedMetric_Call) Run(run func()) *Collector_ResetAvailabilityZonesUsedMetric_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *Collector_ResetAvailabilityZonesUsedMetric_Call) Return() *Collector_ResetAvailabilityZonesUsedMetric_Call {
	_c.Call.Return()
	return _c
}

func (_c *Collector_ResetAvailabilityZonesUsedMetric_Call) RunAndReturn(run func()) *Collector_ResetAvailabilityZonesUsedMetric_Call {
	_c.Run(run)
	return _c
}

// ResetClusterSizeMetric provides a mock function with no fields
func (_m *Collector) ResetClusterSizeMetric() {
	_m.Called()
}

// Collector_ResetClusterSizeMetric_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ResetClusterSizeMetric'
type Collector_ResetClusterSizeMetric_Call struct {
	*mock.Call
}

// ResetClusterSizeMetric is a helper method to define mock.On call
func (_e *Collector_Expecter) ResetClusterSizeMetric() *Collector_ResetClusterSizeMetric_Call {
	return &Collector_ResetClusterSizeMetric_Call{Call: _e.mock.On("ResetClusterSizeMetric")}
}

func (_c *Collector_ResetClusterSizeMetric_Call) Run(run func()) *Collector_ResetClusterSizeMetric_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *Collector_ResetClusterSizeMetric_Call) Return() *Collector_ResetClusterSizeMetric_Call {
	_c.Call.Return()
	return _c
}

func (_c *Collector_ResetClusterSizeMetric_Call) RunAndReturn(run func()) *Collector_ResetClusterSizeMetric_Call {
	_c.Run(run)
	return _c
}

// NewCollector creates a new instance of Collector. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewCollector(t interface {
	mock.TestingT
	Cleanup(func())
}) *Collector {
	mock := &Collector{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
