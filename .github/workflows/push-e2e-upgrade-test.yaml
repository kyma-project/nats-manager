name: push-e2e-upgrade-test

env:
  DOCKER_IMAGE: "europe-docker.pkg.dev/kyma-project/prod/nats-manager"
  E2E_LOG_LEVEL: debug
  KYMA_STABILITY: "unstable"
  KYMA: "./hack/kyma"

on:
  push:
    branches: [ "main" ]
    paths-ignore:
      - 'docs/**'
      - '**.md'
      - 'sec-scanners-config.yaml'

jobs:
  e2e-upgrade: # This job tests the upgrade of NATS module from latest release from fast channel to current commit.
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install k3d tools
        run: |
          make -C hack/ci/ install-k3d-tools

      - name: Install Kyma CLI & setup k3d cluster using kyma CLI
        run: |
          make kyma
          make -C hack/ci/ create-k3d
          kubectl version
          kubectl cluster-info

      - name: Install the latest released NATS manager
        run: |
          make -C hack/ci/ create-kyma-system-ns
          make -C hack/ci/ install-latest-nats-manager-release

      - name: Setup & test NATS CR
        run: |
          make e2e-setup

      - name: Wait for the 'post-nats-manager-build' job to succeed
        uses: kyma-project/wait-for-commit-status-action@2b3ffe09af8b6f40e1213d5fb7f91a7bd41ffb20
        with:
          context: "post-nats-manager-build"
          commit_ref: "${{ github.sha }}"
          timeout: 600000 # 10 minutes in milliseconds
          # The check interval is kept long otherwise it will exhaust the GitHub rate limit (More info: https://docs.github.com/en/rest/overview/resources-in-the-rest-api?apiVersion=2022-11-28#rate-limiting)
          check_interval: 60000 # 1 minute in milliseconds
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          GITHUB_OWNER: "${{ github.repository_owner }}"
          GITHUB_REPO: "nats-manager"

      - name: Install the new NATS manager from current commit
        env:
          COMMIT_SHA: "${{ github.sha }}"
        run: |
          export DOCKER_TAG="$(date +v%Y%m%d)-$(echo ${COMMIT_SHA} | head -c 8)"
          make deploy IMG="${DOCKER_IMAGE}:${DOCKER_TAG}"

      - name: Wait for new changes to be reflected
        # Waits for NATS-manager image to be updated and NATS CR readiness.
        env:
          COMMIT_SHA: "${{ github.sha }}"
        run: |
          export DOCKER_TAG="$(date +v%Y%m%d)-$(echo ${COMMIT_SHA} | head -c 8)"
          export MANAGER_IMAGE="${DOCKER_IMAGE}:${DOCKER_TAG}"
          make e2e-setup

      - name: Run NATS bench
        run: |
          go install github.com/nats-io/natscli/nats@latest
          export PATH=$HOME/go/bin:$PATH
          make e2e-bench

      - name: Test NATS-server
        run: |
          make e2e-nats-server

      - name: Cleanup NATS CR
        run: |
          make e2e-cleanup
